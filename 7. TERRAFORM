INFRASTRUCTURE: RESOURCES USED TO RUN OUR APPLICATION ON CLOUD.
EX: SERVER, VPC, ELB, S3, ASG ETC-------

CLOUD -- > AWS --- > MANUALLY 

LIMITATIONS:
1. Its time consuming.
2. It will have chance of doing mistakes.
3. Delaying the activites.

AUTOMATION WAYS:
1. CFT -- > CLOUDFORMATION TEMPLATE (JSON/YAML)
2. ARM -- > AZURE RESOURCE MANAGER
3. GDE -- > GOOGLE DEPLOY ENGINE

2014 -- > MITCHELL HASIMOTO -- > TERRAFORM

TERRAFORM -- > AWS, GCP, AZURE,

TERRAFORM USES HCL (HASIHICORP CONFIGURATION LANGUAGE) 
CONFIGURATION FILE: the files which have the resource information
ex: .tf files

terraform -- > servers < --- configure & deploy by ansible

aws configure 

INSTALLATION:

sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo


terraform init	: to initalize the provider plugins.
terraform plan	: to create the execution plan
terraform apply	: to create the resources
terraform destroy: to delete the resource


statefile: it will store the resource infromation which is created by terraform only.
terraform state list : to list the resources created by terraform.

target: it is used to delete one specific resource

terraform destroy -target="aws_instance.one[2]"


code:

provider "aws" {
region = "us-east-1"
}

resource "aws_instance" "one" {
ami = "ami-04823729c75214919"
instance_type = "t2.micro"
count = 5
}

 1  aws configure
    2  sudo yum install -y yum-utils
    3  sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
    4  sudo yum -y install terraform
    5  mkdir terraform
    6  cd terraform/
    7  vim main.tf
    8  cat main.tf
    9  terraform  init
   10  terraform plan
   11  terraform apply
   12  ll
   13  cat terraform.tfstate
   14  terraform destroy
   15  cat terraform.tfstate
   16  vim main.tf
   17  terraform plan
   18  terraform apply
   19  ll
   20  terraform state list
   21  cat main.tf
   22  terraform state list
   23  terraform destroy -target="aws_instance.one[0]"
   24  terraform state list
   25  terraform destroy -target="aws_instance.one[1]" -target="aws_instance.one[2]"
   26  terraform state list
   27  terraform destroy
   28  terraform state list
   29  history


CODE FOR BUKCTE:

provider "aws" {
region = "us-east-1"
}

resource "aws_s3_bucket" "example" {
  bucket = "devopsbyraham889900"
  acl = "private"
}


VARIABLES:

STRING:
provider "aws" {
region = "us-east-1"
}

resource "aws_instance" "one" {
ami = "ami-04823729c75214919"
instance_type = var.instance_type
tags = {
Name = "terraform-server"
}
}

variable "instance_type" {
description = ""
type = string
default = "t2.micro"
}

2. NUMBER:

provider "aws" {
region = "us-east-1"
}

resource "aws_instance" "one" {
count = var.instance_count
ami = "ami-04823729c75214919"
instance_type = var.instance_type
tags = {
Name = "terraform-server"
}
}

variable "instance_type" {
description = ""
type = string
default = "t2.micro"
}

variable "instance_count" {
description = ""
type = number
default = 5
}


history:

 126  aws config
  127  aws configure
  128  sudo yum install -y yum-utils
  129  sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
  130  sudo yum -y install terraform
  131  ll
  132  rm -rf *
  133  mkdir terraform
  134  cd terraform/
  135  vim main.tf
  136  terraform init
  137  terraform plan
  138  vim main.tf
  139  terraform plan
  140  terraform apply
  141  cat main.tf
  142  terraform destroy
  143  vim main.tf
  144  terraform apply --auto-approve
  145  vim main.tf
  146  terraform apply --auto-approve
  147  vim main.tf
  148  terraform plan
  149  vim main.tf
  150  terraform plan
  151  vim main.tf
  152  terraform plan
  153  vim main.tf
  154  terraform plan
  155  terraform apply --auto-approve
  156  cat main.tf
  157  vim main.tf
  158  terraform apply --auto-approve
  159  terraform state list
  160  terraform destroy --auto-approve
  161  vim main.tf
  162  terraform apply --auto-approve
  163  terraform destroy --auto-approve
  164  cat main.tf
  165  vim main.tf
  166  terraform apply --auto-approve
  167  terraform state list
  168  cat terraform.tfstate
  169  cat main.tf
  170  history
